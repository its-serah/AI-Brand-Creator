version: '3.8'

services:
  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: brand-rabbitmq
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: brand
      RABBITMQ_DEFAULT_PASS: brandpassword
      RABBITMQ_DEFAULT_VHOST: brand-vhost
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./infrastructure/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
    restart: unless-stopped
    networks:
      - brand-network

  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.14-community
    container_name: brand-neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      NEO4J_AUTH: neo4j/brandpassword
      NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*,gds.*
      NEO4J_dbms_memory_heap_initial__size: 2G
      NEO4J_dbms_memory_heap_max__size: 4G
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - ./shared/neo4j-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - brand-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: brand-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - brand-network

  # MinIO S3-Compatible Storage
  minio:
    image: minio/minio:latest
    container_name: brand-minio
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    restart: unless-stopped
    networks:
      - brand-network

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: brand-prometheus
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --storage.tsdb.retention.time=200h
    volumes:
      - ./infrastructure/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    restart: unless-stopped
    networks:
      - brand-network

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:10.0.0
    container_name: brand-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: brandpassword
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infrastructure/monitoring/grafana/provisioning:/etc/grafana/provisioning
    restart: unless-stopped
    networks:
      - brand-network

  # API Gateway Service
  api-service:
    build:
      context: ./api-service
      dockerfile: Dockerfile
    container_name: brand-api
    ports:
      - "8000:8000"
    environment:
      - RABBITMQ_URL=amqp://brand:brandpassword@rabbitmq:5672/brand-vhost
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=brandpassword
      - REDIS_URL=redis://redis:6379/0
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin123
      - S3_BUCKET=brand-assets
      - LOG_LEVEL=INFO
      - ENVIRONMENT=development
    volumes:
      - ./api-service/app:/app/app
      - ./shared:/app/shared
    depends_on:
      - rabbitmq
      - neo4j
      - redis
      - minio
    restart: unless-stopped
    networks:
      - brand-network

  # Logo Generation Service (GPU Worker)
  logo-gen-service:
    build:
      context: ./logo-gen-service
      dockerfile: Dockerfile.gpu
    container_name: brand-logo-gen
    environment:
      - RABBITMQ_URL=amqp://brand:brandpassword@rabbitmq:5672/brand-vhost
      - REDIS_URL=redis://redis:6379/0
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin123
      - S3_BUCKET=brand-assets
      - MODEL_CACHE_DIR=/app/models
      - DEVICE=cuda
      - LOG_LEVEL=INFO
    volumes:
      - ./logo-gen-service/app:/app/app
      - ./shared:/app/shared
      - model_cache:/app/models
    depends_on:
      - rabbitmq
      - redis
      - minio
    restart: unless-stopped
    networks:
      - brand-network
    # Uncomment if you have GPU access in Docker
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  # Palette Recommendation Service
  palette-service:
    build:
      context: ./palette-service
      dockerfile: Dockerfile
    container_name: brand-palette
    environment:
      - RABBITMQ_URL=amqp://brand:brandpassword@rabbitmq:5672/brand-vhost
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=brandpassword
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=INFO
    volumes:
      - ./palette-service/app:/app/app
      - ./shared:/app/shared
    depends_on:
      - rabbitmq
      - neo4j
      - redis
    restart: unless-stopped
    networks:
      - brand-network

  # Rationale Generation Service
  rationale-service:
    build:
      context: ./rationale-service
      dockerfile: Dockerfile
    container_name: brand-rationale
    environment:
      - RABBITMQ_URL=amqp://brand:brandpassword@rabbitmq:5672/brand-vhost
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LOG_LEVEL=INFO
    volumes:
      - ./rationale-service/app:/app/app
      - ./shared:/app/shared
    depends_on:
      - rabbitmq
      - redis
    restart: unless-stopped
    networks:
      - brand-network

  # PDF Generation Service
  pdf-service:
    build:
      context: ./pdf-service
      dockerfile: Dockerfile
    container_name: brand-pdf
    environment:
      - RABBITMQ_URL=amqp://brand:brandpassword@rabbitmq:5672/brand-vhost
      - REDIS_URL=redis://redis:6379/0
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin123
      - S3_BUCKET=brand-assets
      - LOG_LEVEL=INFO
    volumes:
      - ./pdf-service/app:/app/app
      - ./shared:/app/shared
    depends_on:
      - rabbitmq
      - redis
      - minio
    restart: unless-stopped
    networks:
      - brand-network

volumes:
  rabbitmq_data:
  neo4j_data:
  neo4j_logs:
  redis_data:
  minio_data:
  prometheus_data:
  grafana_data:
  model_cache:

networks:
  brand-network:
    driver: bridge
