version: '3.8'

services:
  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.14-community
    container_name: brand-neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      NEO4J_AUTH: neo4j/brandpassword
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - ./data/neo4j-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - brand-network

  # MinIO S3-Compatible Storage
  minio:
    image: minio/minio:latest
    container_name: brand-minio
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    restart: unless-stopped
    networks:
      - brand-network

  # Redis (for optional Celery task queue)
  redis:
    image: redis:7.2-alpine
    container_name: brand-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - brand-network

  # Brand Generator API (development mode)
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: brand-api
    ports:
      - "8000:8000"
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=brandpassword
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin123
      - S3_BUCKET=brand-assets
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=INFO
    volumes:
      - ./api:/app/api
      - ./workers:/app/workers
      - model_cache:/app/models
    depends_on:
      - neo4j
      - minio
      - redis
    restart: unless-stopped
    networks:
      - brand-network
    # Uncomment if you have GPU access in Docker
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

volumes:
  neo4j_data:
  neo4j_logs:
  minio_data:
  redis_data:
  model_cache:

networks:
  brand-network:
    driver: bridge
